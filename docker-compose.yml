version: '3.8'

services:
  backend:
    container_name: rekamedchain_backend
    build:
      context: .
      dockerfile: ./infra/Dockerfile.backend
      target: builder
    ports:
      - "8080:8080"
    volumes:
      - ./apps/backend:/app
    env_file:
      - .env
    depends_on:
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
      db:
        condition: service_healthy # Tunggu sampai DB 'healthy'
      ipfs:
        condition: service_started # Cukup tunggu ipfs dimulai
    env_file:
      - .env
=======
      - db
      - ipfs
>>>>>>> Stashed changes
=======
      - db
      - ipfs
>>>>>>> Stashed changes
=======
      - db
      - ipfs
>>>>>>> Stashed changes
    networks:
      - rekamed_net
    command: sh -c "rm -f go.sum && go mod tidy && migrate -path ./migrations -database \"$$DB_SOURCE\" up && go run ./cmd"

  web:
    container_name: rekamedchain_web
    build:
      context: .
      dockerfile: infra/Dockerfile.web
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "pnpm install && pnpm --filter web dev"
    environment:
      - CI=true

  db:
    container_name: rekamedchain_db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - rekamed_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  ipfs:
    container_name: rekamedchain_ipfs
    image: ipfs/go-ipfs:latest
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8081:8080"
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - rekamed_net
      
  hardhat:
    container_name: rekamedchain_hardhat
    build:
      context: .
      dockerfile: infra/Dockerfile.hardhat
    ports:
      - "8545:8545"
    networks:
      - rekamed_net

networks:
  rekamed_net:
    driver: bridge

volumes:
  postgres_data:
  ipfs_data: